{
  "dependencies": {
    "python_class": "serializable_elist", 
    "python_module": "g_sorcery.g_collections", 
    "value": {
      "data": [], 
      "separator": "\n\t"
    }
  }, 
  "description": "QuipuEvaluate simple Python mathmatical and logical expressionshttpen.wikipedia.orgwikiQuipuAn attempt to make a safe evaluator of a subset of Python expressions.This is mostly a proof-of-concept for getting feedback, it has not beenthoroughly checked for safety, use at your own risk )It uses the Python ast module to parse the expression, but all evaluation isdone by walking the ast, it is not directly executed by the Python runtime.Nosetests are provided below including coverage of supported and unsupportedoperations.Known security considerationsThe variables are expected to be simple primitive types. Providing functionswith unsafe effects, or variables where the operator implementations can haveunsafe effects is obviously unsafe.Some operations may also take a lot of time or memory and DOS the process. Usage  import quipu  result  quipu.evaluate(2 + 2)See the list of supported_expressions in test_asteval.py for an example ofwhat operations are implemented.", 
  "eclasses": [
    "g-sorcery", 
    "gs-pypi"
  ], 
  "homepage": "https://github.com/mgood/quipu", 
  "info": {
    "Author:": "Matt Good", 
    "Home Page:": "https://github.com/mgood/quipu", 
    "License:": "BSD", 
    "Package Index Owner:": "mgood", 
    "Platform:": "any"
  }, 
  "license": "", 
  "longdescription": "QuipuEvaluate simple Python mathmatical and logical expressionshttpen.wikipedia.orgwikiQuipuAn attempt to make a safe evaluator of a subset of Python expressions.This is mostly a proof-of-concept for getting feedback, it has not beenthoroughly checked for safety, use at your own risk )It uses the Python ast module to parse the expression, but all evaluation isdone by walking the ast, it is not directly executed by the Python runtime.Nosetests are provided below including coverage of supported and unsupportedoperations.Known security considerationsThe variables are expected to be simple primitive types. Providing functionswith unsafe effects, or variables where the operator implementations can haveunsafe effects is obviously unsafe.Some operations may also take a lot of time or memory and DOS the process. Usage  import quipu  result  quipu.evaluate(2 + 2)See the list of supported_expressions in test_asteval.py for an example ofwhat operations are implemented.", 
  "maintainer": [
    {
      "email": "piatlicki@gmail.com", 
      "name": "Jauhien Piatlicki"
    }
  ], 
  "md5": "bf72ddb9aebde69ccb7567ea14407c97", 
  "python_compat": "( python{2_6,2_7,3_2,3_3} )", 
  "source_uri": "https://pypi.python.org/packages/source/q/quipu/quipu-0.1.tar.gz"
}